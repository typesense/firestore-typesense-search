name: firestore-typesense-search
version: 2.0.1
specVersion: v1beta # Firebase Extensions specification version (do not edit)

displayName: Search Firestore with Typesense
description: Indexes data from Firestore into Typesense for full-text search

license: Apache-2.0 # The license you want for the extension

author:
  authorName: Typesense
  url: https://typesense.org

sourceUrl: https://github.com/typesense/firebase-typesense-search-extension/tree/master
releaseNotesUrl: https://github.com/typesense/firestore-typesense-search/releases

billingRequired: true

resources:
  - name: indexOnWrite
    description: A function that indexes data into Typesense when it's triggered by Firestore changes
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      sourceDirectory: functions
      buildConfig:
        runtime: nodejs22
      serviceConfig:
        timeoutSeconds: 540
      eventTrigger:
        eventType: google.cloud.firestore.document.v1.written
        triggerRegion: ${FIRESTORE_DATABASE_REGION}
        eventFilters:
          - attribute: database
            value: ${DATABASE}
          - attribute: document
            value: ${FIRESTORE_COLLECTION_PATH}/{documentID}
            operator: match-path-pattern

  - name: backfill
    description: >-
      A function that backfills data from a Firestore collection into Typesense,
      triggered when a Firestore document with the path `typesense_sync/backfill` has the contents of `trigger: true`.
    type: firebaseextensions.v1beta.v2function
    properties:
      location: ${LOCATION}
      buildConfig:
        runtime: nodejs22
      sourceDirectory: functions
      serviceConfig:
        timeoutSeconds: 540
        availableMemory: 2048M
      eventTrigger:
        eventType: google.cloud.firestore.document.v1.written
        triggerRegion: ${FIRESTORE_DATABASE_REGION}
        eventFilters:
          - attribute: database
            value: ${DATABASE}
          - attribute: document
            value: typesense_sync/backfill
            operator: match-path-pattern

roles:
  - role: datastore.user
    reason: Required to backfill data from your Firestore collection into Typesense

externalServices:
  - name: Typesense Cloud
    PricingUri: https://cloud.typesense.org/pricing
  - name: Typesense Self Hosted (Free)
    PricingUri: https://typesense.org/downloads

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For optimal performance, select a location close to your Firestore database region.
    type: select
    options:
      # North America
      - label: us-central1 (Iowa)
        value: us-central1
      - label: us-east1 (South Carolina)
        value: us-east1
      - label: us-east4 (Northern Virginia)
        value: us-east4
      - label: us-east5 (Columbus)
        value: us-east5
      - label: us-south1 (Dallas)
        value: us-south1
      - label: us-west1 (Oregon)
        value: us-west1
      - label: us-west2 (Los Angeles)
        value: us-west2
      - label: us-west3 (Salt Lake City)
        value: us-west3
      - label: us-west4 (Las Vegas)
        value: us-west4
      - label: northamerica-northeast1 (Montreal)
        value: northamerica-northeast1
      - label: northamerica-northeast2 (Toronto)
        value: northamerica-northeast2
      
      # South America
      - label: southamerica-east1 (Sao Paulo)
        value: southamerica-east1
      - label: southamerica-west1 (Santiago)
        value: southamerica-west1
      
      # Europe
      - label: europe-north1 (Finland)
        value: europe-north1
      - label: europe-west1 (Belgium)
        value: europe-west1
      - label: europe-west2 (London)
        value: europe-west2
      - label: europe-west3 (Frankfurt)
        value: europe-west3
      - label: europe-west4 (Netherlands)
        value: europe-west4
      - label: europe-west6 (Zurich)
        value: europe-west6
      - label: europe-west8 (Milan)
        value: europe-west8
      - label: europe-west9 (Paris)
        value: europe-west9
      - label: europe-west10 (Berlin)
        value: europe-west10
      - label: europe-west12 (Turin)
        value: europe-west12
      - label: europe-central2 (Warsaw)
        value: europe-central2
      - label: europe-southwest1 (Madrid)
        value: europe-southwest1
      
      # Middle East
      - label: me-central1 (Doha)
        value: me-central1
      - label: me-central2 (Dammam)
        value: me-central2
      - label: me-west1 (Tel Aviv)
        value: me-west1
      
      # Asia
      - label: asia-east1 (Taiwan)
        value: asia-east1
      - label: asia-east2 (Hong Kong)
        value: asia-east2
      - label: asia-northeast1 (Tokyo)
        value: asia-northeast1
      - label: asia-northeast2 (Osaka)
        value: asia-northeast2
      - label: asia-northeast3 (Seoul)
        value: asia-northeast3
      - label: asia-south1 (Mumbai)
        value: asia-south1
      - label: asia-south2 (Delhi)
        value: asia-south2
      - label: asia-southeast1 (Singapore)
        value: asia-southeast1
      - label: asia-southeast2 (Jakarta)
        value: asia-southeast2
      
      # Australia
      - label: australia-southeast1 (Sydney)
        value: australia-southeast1
      - label: australia-southeast2 (Melbourne)
        value: australia-southeast2
    default: us-central1
    required: true
    immutable: true

  - param: FIRESTORE_DATABASE_REGION
    label: Firestore Database region
    description: >-
      The region where your Firestore database is located.
    type: select
    options:
      # Multi-region locations
      - label: nam5 (US multi-region)
        value: nam5
      - label: eur3 (Europe multi-region)
        value: eur3
      # North America
      - label: us-central1 (Iowa)
        value: us-central1
      - label: us-west1 (Oregon)
        value: us-west1
      - label: us-west2 (Los Angeles)
        value: us-west2
      - label: us-west3 (Salt Lake City)
        value: us-west3
      - label: us-west4 (Las Vegas)
        value: us-west4
      - label: us-east1 (South Carolina)
        value: us-east1
      - label: us-east4 (Northern Virginia)
        value: us-east4
      - label: us-east5 (Columbus)
        value: us-east5
      - label: us-south1 (Dallas)
        value: us-south1
      - label: northamerica-northeast1 (Montreal)
        value: northamerica-northeast1
      - label: northamerica-northeast2 (Toronto)
        value: northamerica-northeast2
      - label: northamerica-south1 (Queretaro)
        value: northamerica-south1
      # South America
      - label: southamerica-east1 (São Paulo)
        value: southamerica-east1
      - label: southamerica-west1 (Santiago)
        value: southamerica-west1
      # Europe
      - label: europe-west1 (Belgium)
        value: europe-west1
      - label: europe-west2 (London)
        value: europe-west2
      - label: europe-west3 (Frankfurt)
        value: europe-west3
      - label: europe-west4 (Netherlands)
        value: europe-west4
      - label: europe-west6 (Zürich)
        value: europe-west6
      - label: europe-west8 (Milan)
        value: europe-west8
      - label: europe-west9 (Paris)
        value: europe-west9
      - label: europe-west10 (Berlin)
        value: europe-west10
      - label: europe-west12 (Turin)
        value: europe-west12
      - label: europe-central2 (Warsaw)
        value: europe-central2
      - label: europe-north1 (Finland)
        value: europe-north1
      - label: europe-north2 (Stockholm)
        value: europe-north2
      - label: europe-southwest1 (Madrid)
        value: europe-southwest1
      # Middle East
      - label: me-central1 (Doha)
        value: me-central1
      - label: me-central2 (Dammam)
        value: me-central2
      - label: me-west1 (Tel Aviv)
        value: me-west1
      # Asia
      - label: asia-east1 (Taiwan)
        value: asia-east1
      - label: asia-east2 (Hong Kong)
        value: asia-east2
      - label: asia-northeast1 (Tokyo)
        value: asia-northeast1
      - label: asia-northeast2 (Osaka)
        value: asia-northeast2
      - label: asia-northeast3 (Seoul)
        value: asia-northeast3
      - label: asia-south1 (Mumbai)
        value: asia-south1
      - label: asia-south2 (Delhi)
        value: asia-south2
      - label: asia-southeast1 (Singapore)
        value: asia-southeast1
      - label: asia-southeast2 (Jakarta)
        value: asia-southeast2
      # Australia
      - label: australia-southeast1 (Sydney)
        value: australia-southeast1
      - label: australia-southeast2 (Melbourne)
        value: australia-southeast2
      # Africa
      - label: africa-south1 (Johannesburg)
        value: africa-south1
    default: nam5
    required: true
    immutable: true

  - param: DATABASE
    label: Firestore Database
    description: >-
      The Firestore database to use. Use "(default)" for the default database.
    example: "(default)"
    default: "(default)"
    required: false

  - param: FIRESTORE_COLLECTION_PATH
    label: Firestore Collection Path
    description: >-
      The Firestore collection that needs to be indexed into Typesense.
    example: path/to/firestore_collection
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage: Firestore collection paths must be an odd number of segments separated by slashes, e.g. "path/to/firestore_collection".
    default: path/to/firestore_collection
    required: true
    immutable: true
  - param: FIRESTORE_COLLECTION_FIELDS
    label: Firestore Collection Fields
    description: >-
      A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.
    example: field1,field2,field3
    default: ""
    required: false
  - param: TYPESENSE_HOSTS
    label: Typesense Hosts
    description: >-
      A comma-separated list of Typesense Hosts.
      For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters,
      please be sure to mention all hostnames.
    example: xyz.a1.typesense.net,xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net
    required: true
  - param: TYPESENSE_API_KEY
    label: Typesense API Key
    type: secret
    description: >-
      An Typesense API key with admin permissions.
      Click on "Generate API Key" in cluster dashboard in Typesense Cloud
    example: ""
    required: true
  - param: TYPESENSE_COLLECTION_NAME
    label: Typesense Collection Name
    description: >-
      Typesense collection name to index data into. This collection needs to exist before this extension is installed. Please create it via the Typesense Cloud dashboard or API.
    default: companies
    required: true
  - param: FLATTEN_NESTED_DOCUMENTS
    label: Flatten Nested Documents
    description: >-
      Should nested documents in Firestore be flattened by this extension before they are indexed in Typesense? 
      Set to "Yes" for Typesense versions 0.23.1 and earlier. Set to "No" for Typesense versions 0.24.0 and later.
    type: select
    options:
      - label: No
        value: false
      - label: Yes
        value: true
    default: false
    required: false
  - param: LOG_TYPESENSE_INSERTS
    label: Log Typesense Inserts for Debugging
    description: >-
      Should data inserted into Typesense be logged in Cloud Logging? This can be useful for debugging, but should not be enabled in production.
    type: select
    options:
      - label: No
        value: false
      - label: Yes
        value: true
    default: false
    required: false
  - param: TRANSFORM_FUNCTION_NAME
    label: Transform Function Name
    description: >-
      Optional: Name of a Cloud Function to transform Firestore documents before indexing them into Typesense.
      If specified, this extension will call this function with each document before indexing.
      Leave empty to skip transformation.
    example: transformDoc
    default: ""
    required: false
  - param: TRANSFORM_FUNCTION_PROJECT_ID
    label: Transform Function Project ID
    description: >-
      Project ID where the transform function is deployed. 
      Only required if TRANSFORM_FUNCTION_NAME is set.
      Defaults to the current project ID if not specified.
    example: my-project
    default: ""
    required: false
  - param: TRANSFORM_FUNCTION_REGION
    label: Transform Function Region
    description: >-
      Region where the transform function is deployed.
      Only required if TRANSFORM_FUNCTION_NAME is set.
      Defaults to the same region as this extension if not specified.
    example: us-central1
    default: ""
    required: false
  - param: TRANSFORM_FUNCTION_SECRET
    label: Transform Function Secret
    type: secret
    description: >-
      Authorization secret for the transform function.
      This will be sent in the Authorization header as "Bearer [secret]".
      Only required if TRANSFORM_FUNCTION_NAME is set and the transform function requires authorization.
    example: ""
    required: false
